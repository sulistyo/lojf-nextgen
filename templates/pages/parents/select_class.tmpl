{{define "content"}}
<h1 class="text-2xl font-bold mb-4">Select Class for {{.Child.Name}}</h1>

{{template "flash" .}}

<form method="POST" action="/register/classes" class="grid gap-4 max-w-2xl bg-white p-6 rounded-2xl border">
  <input type="hidden" name="child_id" value="{{.Child.ID}}">

  <div class="space-y-3">
    {{if .ClassOptions}}
      {{range .ClassOptions}}
      <label class="block p-3 border rounded-2xl">
        <div class="flex items-start gap-3">
          <input type="radio" name="class_id" value="{{.ID}}" {{if not .CanRegister}}disabled{{end}} required>
          <div class="flex-1">
            <div class="font-semibold">{{.Name}}</div>
            <div class="text-sm text-gray-600">{{.DateStr}}</div>

            {{if .Description}}
              <div class="mt-2 text-sm text-gray-700 whitespace-pre-line">{{.Description}}</div>
            {{end}}

            <div class="mt-2 flex flex-wrap items-center gap-2">
              {{if .IsFull}}
                <span class="px-2 py-0.5 rounded-xl bg-yellow-100 text-yellow-800 text-xs">
                  Full — waitlist open ({{.Waitlisted}} in queue)
                </span>
              {{else}}
                <span class="px-2 py-0.5 rounded-xl bg-green-100 text-green-800 text-xs">
                  Available — {{.Left}} slot{{if ne .Left 1}}s{{end}} left
                </span>
              {{end}}

              {{if not .CanRegister}}
                <span class="px-2 py-0.5 rounded-xl bg-gray-100 text-gray-700 text-xs"
                      data-countdown="{{.OpensAtUnix}}">
                  Opens in …
                </span>
              {{end}}
            </div>
          </div>
        </div>
      </label>
      {{end}}
    {{else}}
      <p class="text-gray-600">No upcoming classes yet. Please check again later.</p>
    {{end}}
  </div>

  <button class="px-4 py-2 rounded-xl bg-gray-900 text-white">Confirm</button>
</form>

<script>
// Live countdown for elements with data-countdown (epoch seconds in Asia/Jakarta).
function fmt(sec) {
  if (sec < 0) sec = 0;
  const d = Math.floor(sec / 86400); sec %= 86400;
  const h = Math.floor(sec / 3600);  sec %= 3600;
  const m = Math.floor(sec / 60);    const s = Math.floor(sec % 60);
  const parts = [];
  if (d) parts.push(d + "d");
  if (h || d) parts.push(h + "h");
  if (m || h || d) parts.push(m + "m");
  parts.push(s + "s");
  return parts.join(" ");
}

function tick() {
  const now = Math.floor(Date.now()/1000);
  document.querySelectorAll('[data-countdown]').forEach(el => {
    const openAt = parseInt(el.getAttribute('data-countdown'), 10) || 0;
    const remain = openAt - now;
    if (remain <= 0) {
      el.textContent = "Open";
      el.className = "px-2 py-0.5 rounded-xl bg-blue-100 text-blue-800 text-xs";
      // also enable the radio next to it
      const label = el.closest('label');
      if (label) {
        const radio = label.querySelector('input[type="radio"]');
        if (radio) radio.disabled = false;
      }
    } else {
      el.textContent = "Opens in " + fmt(remain);
    }
  });
}

tick();
setInterval(tick, 1000);
</script>
{{end}}

{{define "parents/select_class.tmpl"}}{{template "base" .}}{{end}}
